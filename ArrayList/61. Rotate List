/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null)
            return head;
        ListNode temp = head;
        int size = 0;
        while(temp != null){
            temp = temp.next;
            size++;
        }
        k = k%size;
        while(k>0){
            head = rotate(head);
            k--;
        }
        return head;
    }

    public ListNode rotate(ListNode head){
        ListNode temp = head;
        while(temp.next.next != null){
            temp=temp.next;
        }
        ListNode dummy = temp.next;
        temp.next = null;
        dummy.next = head;
        head = dummy;
        return head;
    }
}
